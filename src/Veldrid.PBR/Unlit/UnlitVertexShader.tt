<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
#version 450

layout(set = 0, binding = 0) uniform ViewProjection
{
    mat4 View;
    mat4 Projection;
};
layout(set = 0, binding = 1) uniform ModelBuffer
{
    mat4 WorldTransform;
};
struct MapUV
{
    vec3 X;
    int Set;
    vec3 Y;
};
layout (set=1, binding=0) uniform UnlitMaterialArguments
{
    vec4 BaseColorFactor;
    float AlphaCutoff;
    MapUV BaseColorMapUV; 
};

<#
    int numColorComponents = 0;
    bool hasTexCoord0 = false;
    bool hasTexCoord1 = false;
    for (int locationIndex = 0; locationIndex<_key.Elements.Elements.Length; ++locationIndex)
    {
        var element = _key.Elements.Elements[locationIndex];
#>
layout(location = <#=locationIndex#>) in <#=SpirVTypeFromFormat(element.Format)#> <#=element.Name#>;
<#
        if (element.Name == "COLOR_0") { numColorComponents = element.Format.GetNumComponents(); }
        else if (element.Name == "TEXCOORD_0") { hasTexCoord0 = true; }
        else if (element.Name == "TEXCOORD_1") { hasTexCoord1 = true; }
    }
#>

layout(location = 0) out vec4 v_Color0;
layout(location = 1) out vec2 v_UVCoord0;
layout(location = 2) out vec2 v_UVCoord1;

void main()
{
    vec4 worldPosition = WorldTransform * vec4(POSITION, 1);
    vec4 viewPosition = View * worldPosition;
    vec4 clipPosition = Projection * viewPosition;
<#
if (hasTexCoord0) Write("    v_UVCoord0 = TEXCOORD_0;\r\n"); else Write("    v_UVCoord0 = vec2(0,0);\r\n");
if (hasTexCoord1) Write("    v_UVCoord1 = TEXCOORD_1;\r\n"); else Write("    v_UVCoord1 = vec2(0,0);\r\n");

switch (numColorComponents)
{
    case 0:
#>
    v_Color0 = vec4(1,1,1,1);
<#
        break;
    case 1:
#>
    v_Color0 = vec4(COLOR_0,0,0,1);
<#
        break;
    case 2:
#>
    v_Color0 = vec4(COLOR_0.x,COLOR_0.y,0,1);
<#
        break;
    case 3:
#>
    v_Color0 = vec4(COLOR_0.x,COLOR_0.y,COLOR_0.z,1);
<#
        break;
    case 4:
#>
    v_Color0 = vec4(COLOR_0.x,COLOR_0.y,COLOR_0.z,COLOR_0.w);
<#
        break;
}
#>
    gl_Position = clipPosition;
}