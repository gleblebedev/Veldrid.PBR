<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
#version 450

layout(set = 0, binding = 0) uniform ViewProjection
{
    mat4 View;
    mat4 Projection;
};
layout(set = 0, binding = 1) uniform ModelBuffer
{
    mat4 Model;
};


<#
    int numColorComponents = 0;
    for (int locationIndex = 0; locationIndex<_key.Elements.Elements.Length; ++locationIndex)
    {
        var element = _key.Elements.Elements[locationIndex];
#>
layout(location = <#=locationIndex#>) in <#=SpirVTypeFromFormat(element.Format)#> <#=element.Name#>;
<#
        if (element.Name == "COLOR_0")
        {
            numColorComponents = element.Format.GetNumComponents();
        }
    }
#>

layout(location = 0) out vec4 fsin_color;

void main()
{
    vec4 worldPosition = Model * vec4(POSITION, 1);
    vec4 viewPosition = View * worldPosition;
    vec4 clipPosition = Projection * viewPosition;
<#
switch (numColorComponents)
{
    case 0:
#>
    fsin_color = vec4(1,1,1,1);
<#
        break;
    case 1:
#>
    fsin_color = vec4(COLOR_0,0,0,1);
<#
        break;
    case 2:
#>
    fsin_color = vec4(COLOR_0.x,COLOR_0.y,0,1);
<#
        break;
    case 3:
#>
    fsin_color = vec4(COLOR_0.x,COLOR_0.y,COLOR_0.z,1);
<#
        break;
    case 4:
#>
    fsin_color = vec4(COLOR_0.x,COLOR_0.y,COLOR_0.z,COLOR_0.w);
<#
        break;
}
#>
    gl_Position = clipPosition;
}